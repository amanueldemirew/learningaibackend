from typing import Optional
from datetime import datetime
from pydantic import BaseModel, Field


class ContentResponse(BaseModel):
    """Schema for content responses"""

    id: int = Field(..., description="Unique identifier of the content")
    unit_id: int = Field(..., description="ID of the unit this content belongs to")
    title: str = Field(..., description="Title of the content")
    content_type: str = Field(..., description="Type of content (text, video, etc.)")
    content: str = Field(..., description="The actual content")
    order: int = Field(..., description="Order of the content within the unit")
    is_ai_generated: bool = Field(
        ..., description="Whether the content was generated by AI"
    )
    ai_prompt: Optional[str] = Field(None, description="Prompt used for AI generation")
    page_reference: Optional[str] = Field(None, description="Reference to source pages")
    created_at: datetime = Field(..., description="When the content was created")
    updated_at: Optional[datetime] = Field(
        None, description="When the content was last updated"
    )

    class Config:
        from_attributes = True
